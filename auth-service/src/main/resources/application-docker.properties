server.port=8080
spring.application.name=auth-service

# Mail configuration
spring.mail.host=${MAIL_HOST}
spring.mail.port=${MAIL_PORT}
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# Redis Configuration
spring.data.redis.host=redis
spring.data.redis.port=6379

# Database Configuration
spring.datasource.url=jdbc:postgresql://auth_db:5432/auth_db
spring.datasource.username=${POSTGRES_USER}
spring.datasource.password=${POSTGRES_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate Configuration
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=false

# Allow bean definition overriding
spring.main.allow-bean-definition-overriding=true

# Eureka Configuration
eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka/
eureka.instance.prefer-ip-address=true

# Actuator for health checks
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=always

# Security Configuration
spring.security.enabled=true

# JWT Configuration
jwt.secret=EfTV^5&78aBcDeFgHiJkLmNoPqRsTuVwXyZ123456#_+
jwt.expiration=86400000
jwt.refresh-expiration=604800000
jwt.expiration.ms=86400000
jwt.refresh.expiration.ms=604800000

# Kafka Configuration
spring.kafka.bootstrap-servers=kafka:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
