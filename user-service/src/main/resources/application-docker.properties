# Docker-specific configuration for user-service
server.port=8081
spring.application.name=user-service

# Neo4j Configuration - Docker service name
spring.neo4j.uri=bolt://neo4j:7687
spring.neo4j.authentication.username=neo4j
spring.neo4j.authentication.password=password

# Redis Configuration - Docker service name
spring.data.redis.host=redis
spring.data.redis.port=6379
spring.data.redis.timeout=60000ms
spring.data.redis.lettuce.pool.max-active=8
spring.data.redis.lettuce.pool.max-idle=8
spring.data.redis.lettuce.pool.min-idle=0

# Kafka Configuration - Docker service name
spring.kafka.bootstrap-servers=kafka:9092
spring.kafka.consumer.group-id=user-service-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# Security Configuration
app.jwt.secret=mySecretKey
app.jwt.expiration=86400000

# Eureka Configuration - Docker service name
eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka/
eureka.instance.prefer-ip-address=true
eureka.instance.instance-id=${spring.application.name}:${server.port}

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=always

# Logging
logging.level.com.ctuconnect=INFO
logging.level.org.springframework.kafka=DEBUG
