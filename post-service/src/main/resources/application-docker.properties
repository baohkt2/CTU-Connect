# Docker-specific configuration for post-service
spring.application.name=post-service  
server.port=8085

# MongoDB Configuration for Docker
spring.data.mongodb.database=post_db
spring.data.mongodb.host=post_db
spring.data.mongodb.port=27017

# Kafka Configuration for Docker
spring.kafka.bootstrap-servers=kafka:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# Kafka Consumer Configuration
spring.kafka.consumer.group-id=post-service-group
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.consumer.auto-offset-reset=earliest

# Eureka Configuration for Docker
eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka/
eureka.instance.prefer-ip-address=true
eureka.instance.instance-id=${spring.application.name}:${server.port}

# Redis Configuration for Docker
spring.data.redis.host=redis
spring.data.redis.port=6379
spring.data.redis.timeout=60000ms
spring.data.redis.lettuce.pool.max-active=8
spring.data.redis.lettuce.pool.max-idle=8
spring.data.redis.lettuce.pool.min-idle=0

# Media Service Configuration for Docker
media-service.url=http://media-service:8084

# File Upload Configuration
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=50MB

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=always

# Logging Configuration
logging.level.com.ctuconnect=INFO
logging.level.org.springframework.kafka=INFO
logging.level.org.springframework.data.mongodb=INFO
