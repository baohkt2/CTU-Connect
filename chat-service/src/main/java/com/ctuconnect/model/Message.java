package com.ctuconnect.model;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;
import org.springframework.data.annotation.Id;
import org.springframework.data.mongodb.core.mapping.Document;
import org.springframework.data.mongodb.core.index.Indexed;

import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

@Data
@NoArgsConstructor
@AllArgsConstructor
@Document(collection = "messages")
public class Message {
    @Id
    private String id;

    @Indexed
    private String conversationId; // ID c·ªßa conversation

    @Indexed
    private String senderId; // ID ng∆∞·ªùi g·ª≠i

    private String senderName; // T√™n ng∆∞·ªùi g·ª≠i (cache)

    private String senderAvatar; // Avatar ng∆∞·ªùi g·ª≠i (cache)

    private MessageType type; // TEXT, IMAGE, FILE, SYSTEM

    private String content; // N·ªôi dung tin nh·∫Øn

    private MessageAttachment attachment; // File ƒë√≠nh k√®m

    private String replyToMessageId; // ID tin nh·∫Øn ƒë∆∞·ª£c reply

    private List<MessageReaction> reactions = new ArrayList<>(); // Reactions

    private MessageStatus status; // SENT, DELIVERED, READ

    private List<String> readByUserIds = new ArrayList<>(); // Danh s√°ch user ƒë√£ ƒë·ªçc

    private LocalDateTime createdAt;

    private LocalDateTime updatedAt;

    private LocalDateTime editedAt;

    private boolean isEdited = false; // C√≥ ph·∫£i l√† tin nh·∫Øn ƒë√£ ch·ªânh s·ª≠a

    private boolean isDeleted = false;

    public enum MessageType {
        TEXT,
        IMAGE,
        FILE,
        SYSTEM // Tin nh·∫Øn h·ªá th·ªëng (join, leave, etc.)
    }

    public enum MessageStatus {
        SENT,
        DELIVERED,
        READ
    }

    @Data
    @NoArgsConstructor
    @AllArgsConstructor
    public static class MessageAttachment {
        private String fileName;
        private String fileUrl;
        private String fileType; // image/jpeg, application/pdf, etc.
        private Long fileSize;
        private String thumbnailUrl; // Cho images/videos
    }

    @Data
    @NoArgsConstructor
    @AllArgsConstructor
    public static class MessageReaction {
        private String userId;
        private String userName;
        private String emoji; // üëç, ‚ù§Ô∏è, üòÇ, üòÆ, üò¢, üò°
        private LocalDateTime createdAt;
    }
}
